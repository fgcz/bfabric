% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fgcz.R
\name{query}
\alias{query}
\title{query bfabric}
\usage{
query(
  login,
  webservicepassword,
  endpoint = "workunit",
  query,
  posturl = "http://localhost:5000/q",
  as_data_frame = FALSE
)
}
\arguments{
\item{login}{bfabric login}

\item{webservicepassword}{bfabric webservicepassword,
visible when you check your user details in the bfabric system.}

\item{endpoint}{the endpoint, e.g., \code{'sample'}}

\item{query}{e,g, \code{list(containerid = 3000)}}

\item{posturl}{where the flask server is working}

\item{as_data_frame}{if TRUE it returns a data.frame object.}
}
\value{
a nested list object
}
\description{
query bfabric
}
\examples{

\dontrun{
query(login, webservicepassword, endpoint='sample', query = list(id=206577))
}

\dontrun{
 RES <- query(endpoint = 'resource',
    query = list('filechecksum' = '127f0c5b6352a326f9a6c8458d59d921'),
    login, webservicepassword)

 WU.pending <- query(endpoint='workunit',
    query = list('status' = 'pending'),
    login, webservicepassword)

 APP.analysis <- query(endpoint='application',
    query=list('applicationtype' = 'analysis'),
    login, webservicepassword)

 # a more complex example

 ## query metadata
 Q <- query(login, webservicepassword,
   endpoint = 'resource',
   query = list('workunitid' = 163763))

 ## stage data
 uris <- sapply(Q$res, function(x){x$uris[3]})
 (rawfilenames <- sapply(strsplit(unlist(uris), ":"), function(x){x[3]}))
 library(rawfileQC)
 library(parallel)
 RAW <- do.call('rbind',
   mclapply(rawfilenames, read.raw, ssh = TRUE, mc.cores = 12))

 ## have fun
 hex.bin(RAW)
}

## Have Fun!
}
